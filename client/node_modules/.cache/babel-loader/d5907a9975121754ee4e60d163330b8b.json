{"ast":null,"code":"var _jsxFileName = \"/Users/shaun/Documents/projects/dilly-dally/client/src/components/Task.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = props => {\n  _s();\n\n  const [toggle, setToggle] = useState(true);\n  const [task, setTask] = useState(props.task.task);\n\n  function handleEdit(editedTask) {\n    fetch('http://localhost:8080/tasks', {\n      method: 'PATCH',\n      mode: 'cors',\n      body: JSON.stringify(editedTask),\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    });\n  }\n\n  return toggle ? /*#__PURE__*/_jsxDEV(\"td\", {\n    className: 'status',\n    onDoubleClick: () => {\n      setToggle(false);\n    },\n    children: task\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n    className: 'status',\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: task,\n      onChange: event => {\n        setTask(event.target.value);\n      },\n      onKeyDown: event => {\n        if (event.key === 'Enter') {\n          const editedTask = {\n            task: event.target.value,\n            id: props.task.id\n          };\n          handleEdit(editedTask);\n          setToggle(true);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Task, \"hDZnaMIYZhNUR/D3uW7x7CDurU0=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/shaun/Documents/projects/dilly-dally/client/src/components/Task.jsx"],"names":["React","useState","Task","props","toggle","setToggle","task","setTask","handleEdit","editedTask","fetch","method","mode","body","JSON","stringify","headers","event","target","value","key","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAACE,KAAK,CAACG,IAAN,CAAWA,IAAZ,CAAhC;;AAEA,WAASE,UAAT,CAAoBC,UAApB,EAA+B;AAC7BC,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,MAAAA,MAAM,EAAE,OAD2B;AAEnCC,MAAAA,IAAI,EAAE,MAF6B;AAGnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,UAAf,CAH6B;AAInCO,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAJ0B,KAAhC,CAAL;AAQD;;AAED,SACEZ,MAAM,gBACJ;AAAI,IAAA,SAAS,EAAE,QAAf;AAAyB,IAAA,aAAa,EAAE,MAAM;AAC5CC,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAFD;AAAA,cAGCC;AAHD;AAAA;AAAA;AAAA;AAAA,UADI,gBAOJ;AAAI,IAAA,SAAS,EAAE,QAAf;AAAA,2BACA;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,KAAK,EAAEA,IAFP;AAGA,MAAA,QAAQ,EAAGW,KAAD,IAAW;AACnBV,QAAAA,OAAO,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,OALD;AAMA,MAAA,SAAS,EAAGF,KAAD,IAAW;AACtB,YAAGA,KAAK,CAACG,GAAN,KAAc,OAAjB,EAAyB;AACvB,gBAAMX,UAAU,GAAG;AACjBH,YAAAA,IAAI,EAAEW,KAAK,CAACC,MAAN,CAAaC,KADF;AAEjBE,YAAAA,EAAE,EAAElB,KAAK,CAACG,IAAN,CAAWe;AAFE,WAAnB;AAIAb,UAAAA,UAAU,CAACC,UAAD,CAAV;AACAJ,UAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AAAC;AAdF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UARJ;AA6BD,CA5CD;;GAAMH,I;;KAAAA,I;AA8CN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Task = props => {\n  const [toggle, setToggle] = useState(true);\n  const [task, setTask] = useState(props.task.task);\n\n  function handleEdit(editedTask){\n    fetch('http://localhost:8080/tasks', {\n      method: 'PATCH',\n      mode: 'cors',\n      body: JSON.stringify(editedTask),\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      },\n    })\n  }\n\n  return(\n    toggle ? (\n      <td className={'status'} onDoubleClick={() => {\n        setToggle(false);\n      }}>\n      {task}\n    </td> \n    ) : (\n      <td className={'status'}>\n      <input \n      type='text' \n      value={task}\n      onChange={(event) => {\n        setTask(event.target.value);\n      }}\n      onKeyDown={(event) => {\n      if(event.key === 'Enter'){\n        const editedTask = {\n          task: event.target.value,\n          id: props.task.id\n        };\n        handleEdit(editedTask);\n        setToggle(true);\n      }}\n      }/>\n      \n      </td>\n    )\n  )\n}\n\nexport default Task;"]},"metadata":{},"sourceType":"module"}