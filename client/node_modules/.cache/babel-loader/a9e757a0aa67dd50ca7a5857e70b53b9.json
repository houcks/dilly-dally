{"ast":null,"code":"var _jsxFileName = \"/Users/shaun/Documents/projects/dilly-dally/client/src/components/TaskCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskCard = props => {\n  _s();\n\n  const [toggle, setToggle] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [toggle ? /*#__PURE__*/_jsxDEV(\"td\", {\n      onDoubleClick: () => {\n        setToggle(false);\n      },\n      children: props.task.task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: props.task.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.task.complete ? \"Complete\" : \"Incomplete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.task.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TaskCard, \"5vSfKVixOhdlHyVzf1hexG5pQnM=\");\n\n_c = TaskCard;\nexport default TaskCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"sources":["/Users/shaun/Documents/projects/dilly-dally/client/src/components/TaskCard.jsx"],"names":["React","useState","TaskCard","props","toggle","setToggle","task","complete","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,IAAD,CAApC;AACA,sBACI;AAAA,eACGG,MAAM,gBACL;AAAI,MAAA,aAAa,EAAE,MAAM;AACvBC,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD,OAFD;AAAA,gBAGCF,KAAK,CAACG,IAAN,CAAWA;AAHZ;AAAA;AAAA;AAAA;AAAA,YADK,gBAOL;AAAA,6BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEH,KAAK,CAACG,IAAN,CAAWA;AAArC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YARJ,eAaE;AAAA,gBACGH,KAAK,CAACG,IAAN,CAAWC,QAAX,GAAsB,UAAtB,GAAmC;AADtC;AAAA;AAAA;AAAA;AAAA,YAbF,eAgBE;AAAA,gBACGJ,KAAK,CAACG,IAAN,CAAWE;AADd;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBD,CAxBD;;GAAMN,Q;;KAAAA,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst TaskCard = props => {\n  const [toggle, setToggle] = useState(true);\n  return (\n      <tr>\n        {toggle ? (\n          <td onDoubleClick={() => {\n            setToggle(false);\n          }}>\n          {props.task.task}\n        </td> \n        ) : (\n          <td>\n          <input type='text' value={props.task.task}/>\n          </td>\n        )}\n\n        <td>\n          {props.task.complete ? \"Complete\" : \"Incomplete\"}\n        </td>\n        <td>\n          {props.task.date}\n        </td>\n      </tr>\n  )\n}\n\nexport default TaskCard;"]},"metadata":{},"sourceType":"module"}