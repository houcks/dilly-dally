{"ast":null,"code":"var _jsxFileName = \"/Users/shaun/Documents/projects/dilly-dally/client/src/components/TaskCard.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskCard = props => {\n  console.log(props.tasks);\n\n  if (props.tasks.complete) {\n    let completeion = \"Complete\";\n  } else {\n    let completeion = \"Incomplete\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.tasks.task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.tasks.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n};\n\n_c = TaskCard;\nexport default TaskCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"sources":["/Users/shaun/Documents/projects/dilly-dally/client/src/components/TaskCard.jsx"],"names":["React","TaskCard","props","console","log","tasks","complete","completeion","task","date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;;AACA,MAAGH,KAAK,CAACG,KAAN,CAAYC,QAAf,EAAwB;AACtB,QAAIC,WAAW,GAAG,UAAlB;AACD,GAFD,MAGI;AACF,QAAIA,WAAW,GAAG,YAAlB;AACD;;AACD,sBAEI;AAAA,4BACE;AAAA,gBACGL,KAAK,CAACG,KAAN,CAAYG;AADf;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAA,gBACGN,KAAK,CAACG,KAAN,CAAYI;AADf;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAcD,CAtBD;;KAAMR,Q;AAwBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\n\nconst TaskCard = props => {\n  console.log(props.tasks)\n  if(props.tasks.complete){\n    let completeion = \"Complete\";\n  }\n  else{\n    let completeion = \"Incomplete\";\n  }\n  return (\n\n      <tr>\n        <td>\n          {props.tasks.task}\n        </td>\n        <td>\n\n        </td>\n        <td>\n          {props.tasks.date}\n        </td>\n      </tr>\n  )\n}\n\nexport default TaskCard;"]},"metadata":{},"sourceType":"module"}