{"ast":null,"code":"var _jsxFileName = \"/Users/shaun/Documents/projects/dilly-dally/client/src/components/TaskCard.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskCard = props => {\n  let completion;\n\n  if (props.tasks.complete) {\n    completion = \"Complete\";\n  } else {\n    completion = \"Incomplete\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.tasks.task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.tasks.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n\n_c = TaskCard;\nexport default TaskCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"sources":["/Users/shaun/Documents/projects/dilly-dally/client/src/components/TaskCard.jsx"],"names":["React","TaskCard","props","completion","tasks","complete","task","date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,MAAIC,UAAJ;;AACA,MAAGD,KAAK,CAACE,KAAN,CAAYC,QAAf,EAAwB;AACpBF,IAAAA,UAAU,GAAG,UAAb;AACH,GAFD,MAGI;AACAA,IAAAA,UAAU,GAAG,YAAb;AACH;;AACD,sBACI;AAAA,4BACE;AAAA,gBACGD,KAAK,CAACE,KAAN,CAAYE;AADf;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBACGJ,KAAK,CAACE,KAAN,CAAYG;AADf;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUD,CAlBD;;KAAMN,Q;AAoBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\n\nconst TaskCard = props => {\n  let completion;\n  if(props.tasks.complete){\n      completion = \"Complete\";\n  }\n  else{\n      completion = \"Incomplete\";\n  }\n  return (\n      <tr>\n        <td>\n          {props.tasks.task}\n        </td>\n        <td>\n          {props.tasks.date}\n        </td>\n      </tr>\n  )\n}\n\nexport default TaskCard;"]},"metadata":{},"sourceType":"module"}