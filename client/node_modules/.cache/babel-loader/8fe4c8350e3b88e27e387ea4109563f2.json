{"ast":null,"code":"var _jsxFileName = \"/Users/shaun/Documents/projects/dilly-dally/client/src/components/TaskCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskCard = props => {\n  _s();\n\n  const [toggle, setToggle] = useState(true);\n  const [task, setTask] = useState(props.task.task);\n\n  function handleEdit(editedTask) {\n    fetch('http://localhost:8080/tasks', {\n      method: 'PATCH',\n      mode: 'cors',\n      body: JSON.stringify(editedTask),\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [toggle ? /*#__PURE__*/_jsxDEV(\"td\", {\n      onDoubleClick: () => {\n        setToggle(false);\n      },\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: task,\n        onChange: event => {\n          setTask(event.target.value);\n        },\n        onKeyDown: event => {\n          if (event.key === 'Enter') {\n            const editedTask = {\n              task: event.target.value,\n              id: props.task.id\n            };\n            handleEdit(editedTask);\n            setToggle(true);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.task.complete ? \"Complete\" : \"Incomplete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.task.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TaskCard, \"hDZnaMIYZhNUR/D3uW7x7CDurU0=\");\n\n_c = TaskCard;\nexport default TaskCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"sources":["/Users/shaun/Documents/projects/dilly-dally/client/src/components/TaskCard.jsx"],"names":["React","useState","Task","TaskCard","props","toggle","setToggle","task","setTask","handleEdit","editedTask","fetch","method","mode","body","JSON","stringify","headers","event","target","value","key","id","complete","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACG,KAAK,CAACG,IAAN,CAAWA,IAAZ,CAAhC;;AAEA,WAASE,UAAT,CAAoBC,UAApB,EAA+B;AAC7BC,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,MAAAA,MAAM,EAAE,OAD2B;AAEnCC,MAAAA,IAAI,EAAE,MAF6B;AAGnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,UAAf,CAH6B;AAInCO,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAJ0B,KAAhC,CAAL;AAQD;;AAED,sBACI;AAAA,eACGZ,MAAM,gBACL;AAAI,MAAA,aAAa,EAAE,MAAM;AACvBC,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD,OAFD;AAAA,gBAGCC;AAHD;AAAA;AAAA;AAAA;AAAA,YADK,gBAOL;AAAA,6BACA;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,KAAK,EAAEA,IAFP;AAGA,QAAA,QAAQ,EAAGW,KAAD,IAAW;AACnBV,UAAAA,OAAO,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,SALD;AAMA,QAAA,SAAS,EAAGF,KAAD,IAAW;AACtB,cAAGA,KAAK,CAACG,GAAN,KAAc,OAAjB,EAAyB;AACvB,kBAAMX,UAAU,GAAG;AACjBH,cAAAA,IAAI,EAAEW,KAAK,CAACC,MAAN,CAAaC,KADF;AAEjBE,cAAAA,EAAE,EAAElB,KAAK,CAACG,IAAN,CAAWe;AAFE,aAAnB;AAIAb,YAAAA,UAAU,CAACC,UAAD,CAAV;AACAJ,YAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AAAC;AAdF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YARJ,eA6BE;AAAA,gBACGF,KAAK,CAACG,IAAN,CAAWgB,QAAX,GAAsB,UAAtB,GAAmC;AADtC;AAAA;AAAA;AAAA;AAAA,YA7BF,eAgCE;AAAA,gBACGnB,KAAK,CAACG,IAAN,CAAWiB;AADd;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCD,CArDD;;GAAMrB,Q;;KAAAA,Q;AAuDN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport Task from './Task';\n\nconst TaskCard = props => {\n  const [toggle, setToggle] = useState(true);\n  const [task, setTask] = useState(props.task.task);\n\n  function handleEdit(editedTask){\n    fetch('http://localhost:8080/tasks', {\n      method: 'PATCH',\n      mode: 'cors',\n      body: JSON.stringify(editedTask),\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      },\n    })\n  }\n\n  return (\n      <tr>\n        {toggle ? (\n          <td onDoubleClick={() => {\n            setToggle(false);\n          }}>\n          {task}\n        </td> \n        ) : (\n          <td>\n          <input \n          type='text' \n          value={task}\n          onChange={(event) => {\n            setTask(event.target.value);\n          }}\n          onKeyDown={(event) => {\n          if(event.key === 'Enter'){\n            const editedTask = {\n              task: event.target.value,\n              id: props.task.id\n            };\n            handleEdit(editedTask);\n            setToggle(true);\n          }}\n          }/>\n          \n          </td>\n        )}\n\n        <td>\n          {props.task.complete ? \"Complete\" : \"Incomplete\"}\n        </td>\n        <td>\n          {props.task.date}\n        </td>\n      </tr>\n  )\n}\n\nexport default TaskCard;"]},"metadata":{},"sourceType":"module"}