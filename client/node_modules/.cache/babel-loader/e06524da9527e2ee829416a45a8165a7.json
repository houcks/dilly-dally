{"ast":null,"code":"var _jsxFileName = \"/Users/shaun/Documents/projects/dilly-dally/client/src/components/DillyDally.jsx\";\nimport React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport AddTask from './AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst test = /*#__PURE__*/React.createContext();\nexport default class DillyDally extends Component {\n  constructor(props) {\n    super(props);\n    this.test = this.state.tasks;\n\n    this.addToTable = task => {\n      this.setState({\n        tasks: [...task]\n      });\n    };\n\n    this.removeFromTable = taskID => {\n      const toRemove = this.state.tasks.find(obj => obj.id === taskID);\n      let index = this.state.tasks.indexOf(toRemove);\n      let newTasks = this.state.tasks;\n      newTasks.splice(index, 1);\n      this.setState({\n        tasks: newTasks\n      });\n    };\n\n    this.state = {\n      tasks: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/tasks\", {\n      method: \"GET\"\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        tasks: data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        children: \"Dilly Dally\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        tasks: this.state.tasks,\n        remove: this.removeFromTable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/shaun/Documents/projects/dilly-dally/client/src/components/DillyDally.jsx"],"names":["React","Component","Table","AddTask","test","createContext","DillyDally","constructor","props","state","tasks","addToTable","task","setState","removeFromTable","taskID","toRemove","find","obj","id","index","indexOf","newTasks","splice","componentDidMount","fetch","method","then","response","json","data","catch","err","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,IAAI,gBAAGJ,KAAK,CAACK,aAAN,EAAb;AACA,eAAe,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAChDM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAMnBJ,IANmB,GAMZ,KAAKK,KAAL,CAAWC,KANC;;AAAA,SAmBnBC,UAnBmB,GAmBLC,IAAD,IAAU;AACrB,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,CAAC,GAAGE,IAAJ;AADK,OAAd;AAGD,KAvBkB;;AAAA,SAyBnBE,eAzBmB,GAyBAC,MAAD,IAAY;AAC5B,YAAMC,QAAQ,GAAG,KAAKP,KAAL,CAAWC,KAAX,CAAiBO,IAAjB,CAAsBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAUJ,MAAvC,CAAjB;AACA,UAAIK,KAAK,GAAG,KAAKX,KAAL,CAAWC,KAAX,CAAiBW,OAAjB,CAAyBL,QAAzB,CAAZ;AACA,UAAIM,QAAQ,GAAG,KAAKb,KAAL,CAAWC,KAA1B;AACAY,MAAAA,QAAQ,CAACC,MAAT,CAAgBH,KAAhB,EAAuB,CAAvB;AACA,WAAKP,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAEY;AADK,OAAd;AAGD,KAjCkB;;AAEjB,SAAKb,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDc,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,MAAAA,MAAM,EAAE;AAD2B,KAAhC,CAAL,CAGGC,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAHtB,EAIGF,IAJH,CAISG,IAAD,IAAU;AACd,WAAKjB,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAEoB;AADK,OAAd;AAGD,KARH,EASGC,KATH,CASUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATlB;AAUD;;AAiBDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWC,KAAzB;AAAiC,QAAA,MAAM,EAAE,KAAKI;AAA9C;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,oBADF;AAOD;;AA5C+C","sourcesContent":["import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport AddTask from './AddTask';\n\nconst test = React.createContext();\nexport default class DillyDally extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n    };\n  }\n  test = this.state.tasks;\n  componentDidMount() {\n    fetch(\"http://localhost:8080/tasks\", {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          tasks: data,\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n  addToTable = (task) => {\n    this.setState({\n      tasks: [...task]\n    })\n  }\n\n  removeFromTable = (taskID) => {\n    const toRemove = this.state.tasks.find(obj => obj.id ===taskID)\n    let index = this.state.tasks.indexOf(toRemove);\n    let newTasks = this.state.tasks\n    newTasks.splice(index, 1)\n    this.setState({\n      tasks: newTasks\n    })\n  }\n\n  render() {\n    return(    \n      <>\n        <nav>Dilly Dally</nav>\n        <AddTask/>\n        <Table tasks={this.state.tasks}  remove={this.removeFromTable}/>\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}