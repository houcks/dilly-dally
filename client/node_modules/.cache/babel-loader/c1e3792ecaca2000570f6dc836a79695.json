{"ast":null,"code":"var _jsxFileName = \"/Users/shaun/Documents/projects/dilly-dally/client/src/components/TaskCard.jsx\";\nimport React, { useState } from 'react';\nimport Task from './Task';\nimport Status from './Status';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskCard = props => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(Task, {\n      task: props.task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.task.complete ? \"Complete\" : \"Incomplete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.task.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n};\n\n_c = TaskCard;\nexport default TaskCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"sources":["/Users/shaun/Documents/projects/dilly-dally/client/src/components/TaskCard.jsx"],"names":["React","useState","Task","Status","TaskCard","props","task","complete","date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,sBACI;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,KAAK,CAACC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGD,KAAK,CAACC,IAAN,CAAWC,QAAX,GAAsB,UAAtB,GAAmC;AADtC;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA,gBACGF,KAAK,CAACC,IAAN,CAAWE;AADd;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWD,CAZD;;KAAMJ,Q;AAcN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport Task from './Task';\nimport Status from './Status';\n\nconst TaskCard = props => {\n  return (\n      <tr>\n        <Task task={props.task}/>\n        <td>\n          {props.task.complete ? \"Complete\" : \"Incomplete\"}\n        </td>\n        <td>\n          {props.task.date}\n        </td>\n      </tr>\n  )\n}\n\nexport default TaskCard;"]},"metadata":{},"sourceType":"module"}